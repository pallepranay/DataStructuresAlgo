/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        if(root==null) return ans;
        Queue<TreeNode> que = new LinkedList<>();
        Boolean flag = false;
        que.add(root);
        while(que.size()>0){
            int size = que.size();
            List<Integer> curr  = new ArrayList<>();
            for(int i=0;i<size;i++){
                TreeNode c = que.poll();
                if(c.left!=null) que.add(c.left);
                if(c.right!=null) que.add(c.right);
                curr.add(c.val);
            }
            if(flag) Collections.reverse(curr);
            ans.add(curr);
            flag=!flag;
        }
        return ans;
    }
}
